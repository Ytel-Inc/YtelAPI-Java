/*
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.ytel.api.models;

import java.util.*;

public class Body47Builder {
    //the instance to build
    private Body47 body47;

    /**
     * Default constructor to initialize the instance
     */
    public Body47Builder() {
        body47 = new Body47();
    }

    /**
     * A valid Ytel number (E.164 format).
     */
    public Body47Builder phoneNumber(String phoneNumber) {
        body47.setPhoneNumber(phoneNumber);
        return this;
    }

    /**
     * URL requested once the call connects
     */
    public Body47Builder voiceUrl(String voiceUrl) {
        body47.setVoiceUrl(voiceUrl);
        return this;
    }

    /**
     * Phone number friendly name description
     */
    public Body47Builder friendlyName(String friendlyName) {
        body47.setFriendlyName(friendlyName);
        return this;
    }

    /**
     * Post or Get
     */
    public Body47Builder voiceMethod(String voiceMethod) {
        body47.setVoiceMethod(voiceMethod);
        return this;
    }

    /**
     * URL requested if the voice URL is not available
     */
    public Body47Builder voiceFallbackUrl(String voiceFallbackUrl) {
        body47.setVoiceFallbackUrl(voiceFallbackUrl);
        return this;
    }

    /**
     * Post or Get
     */
    public Body47Builder voiceFallbackMethod(String voiceFallbackMethod) {
        body47.setVoiceFallbackMethod(voiceFallbackMethod);
        return this;
    }

    /**
     * callback url after a hangup occurs
     */
    public Body47Builder hangupCallback(String hangupCallback) {
        body47.setHangupCallback(hangupCallback);
        return this;
    }

    /**
     * Post or Get
     */
    public Body47Builder hangupCallbackMethod(String hangupCallbackMethod) {
        body47.setHangupCallbackMethod(hangupCallbackMethod);
        return this;
    }

    /**
     * URL requested once the call connects
     */
    public Body47Builder heartbeatUrl(String heartbeatUrl) {
        body47.setHeartbeatUrl(heartbeatUrl);
        return this;
    }

    /**
     * URL that can be requested every 60 seconds during the call to notify of elapsed time
     */
    public Body47Builder heartbeatMethod(String heartbeatMethod) {
        body47.setHeartbeatMethod(heartbeatMethod);
        return this;
    }

    /**
     * URL requested when an SMS is received
     */
    public Body47Builder smsUrl(String smsUrl) {
        body47.setSmsUrl(smsUrl);
        return this;
    }

    /**
     * Post or Get
     */
    public Body47Builder smsMethod(String smsMethod) {
        body47.setSmsMethod(smsMethod);
        return this;
    }

    /**
     * URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
     */
    public Body47Builder smsFallbackUrl(String smsFallbackUrl) {
        body47.setSmsFallbackUrl(smsFallbackUrl);
        return this;
    }

    /**
     * The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
     */
    public Body47Builder smsFallbackMethod(String smsFallbackMethod) {
        body47.setSmsFallbackMethod(smsFallbackMethod);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Body47 build() {
        return body47;
    }
}